{
  "$schema": "./schema.json",
  "instructions": [
    {
      "mnemonic": "XCHG_0I",
      "since_version": 0,
      "doc": {
        "category": "stack_basic",
        "description": "Interchanges `s0` with `s[i]`, `1 <= i <= 15`.",
        "gas": "18",
        "fift": "s[i] XCHG0",
        "fift_examples": [],
        "opcode": "0i",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#0 i:(## 4) {1 <= i}",
        "prefix": "0",
        "operands_range_check": { "length": 4, "from": 1, "to": 15 },
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 1,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 43,
          "function_name": "exec_xchg0"
        }
      ]
    },
    {
      "mnemonic": "PUSH",
      "since_version": 0,
      "doc": {
        "category": "stack_basic",
        "description": "Pushes a copy of the old `s[i]` into the stack.",
        "gas": "18",
        "fift": "s[i] PUSH",
        "fift_examples": [],
        "opcode": "2i",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#2 i:uint4",
        "prefix": "2",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 109,
          "function_name": "exec_push"
        }
      ]
    },
    {
      "mnemonic": "PUSHINT_LONG",
      "since_version": 0,
      "doc": {
        "category": "const_int",
        "description": "Pushes integer `xxx`.\n_Details:_ 5-bit `0 <= l <= 30` determines the length `n=8l+19` of signed big-endian integer `xxx`.\nThe total length of this instruction is `l+4` bytes or `n+13=8l+32` bits.",
        "gas": "23",
        "fift": "[xxx] PUSHINT\n[xxx] INT",
        "fift_examples": [],
        "opcode": "82lxxx",
        "stack": "- xxx"
      },
      "bytecode": {
        "tlb": "#82 l:(## 5) xxx:(int (8 * l + 19))",
        "prefix": "82",
        "operands_range_check": { "length": 5, "from": 0, "to": 30 },
        "operands": [
          { "name": "x", "type": "pushint_long" }
        ]
      },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 76,
          "function_name": "exec_push_int"
        }
      ]
    },
    {
      "mnemonic": "PUSHINT_16",
      "since_version": 0,
      "doc": {
        "category": "const_int",
        "description": "Pushes integer `xxxx`. `-2^15 <= xx < 2^15`.",
        "gas": "34",
        "fift": "[xxxx] PUSHINT\n[xxxx] INT",
        "fift_examples": [],
        "opcode": "81xxxx",
        "stack": "- xxxx"
      },
      "bytecode": {
        "tlb": "#81 xxxx:int16",
        "prefix": "81",
        "operands": [
          {
            "name": "x",
            "type": "int",
            "size": 16,
            "min_value": -32768,
            "max_value": 32767,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 61,
          "function_name": "exec_push_smallint"
        }
      ]
    },
    {
      "mnemonic": "POP",
      "since_version": 0,
      "doc": {
        "category": "stack_basic",
        "description": "Pops the old `s0` value into the old `s[i]`.",
        "gas": "18",
        "fift": "s[i] POP",
        "fift_examples": [],
        "opcode": "3i",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#3 i:uint4",
        "prefix": "3",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 143,
          "function_name": "exec_pop"
        }
      ]
    },
    {
      "mnemonic": "PUSHINT_4",
      "since_version": 0,
      "doc": {
        "category": "const_int",
        "description": "Pushes integer `x` into the stack. `-5 <= x <= 10`.\nHere `i` equals four lower-order bits of `x` (`i=x mod 16`).",
        "gas": "18",
        "fift": "[x] PUSHINT\n[x] INT",
        "fift_examples": [],
        "opcode": "7i",
        "stack": "- x"
      },
      "bytecode": {
        "tlb": "#7 i:uint4",
        "prefix": "7",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "pushint4" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 31,
          "function_name": "exec_push_tinyint4"
        }
      ]
    },
    {
      "mnemonic": "XCHG_1I",
      "since_version": 0,
      "doc": {
        "category": "stack_basic",
        "description": "Interchanges `s1` with `s[i]`, `2 <= i <= 15`.",
        "gas": "18",
        "fift": "s1 s[i] XCHG",
        "fift_examples": [],
        "opcode": "1i",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#1 i:(## 4) {2 <= i}",
        "prefix": "1",
        "operands_range_check": { "length": 4, "from": 2, "to": 15 },
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 2,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 83,
          "function_name": "exec_xchg1"
        }
      ]
    },
    {
      "mnemonic": "XCHG_0I_LONG",
      "since_version": 0,
      "doc": {
        "category": "stack_basic",
        "description": "Interchanges `s0` with `s[ii]`, `0 <= ii <= 255`.",
        "gas": "26",
        "fift": "s0 [ii] s() XCHG",
        "fift_examples": [],
        "opcode": "11ii",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#11 ii:uint8",
        "prefix": "11",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 52,
          "function_name": "exec_xchg0_l"
        }
      ]
    },
    {
      "mnemonic": "ROTREV",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `2 1 BLKSWAP` or to `s2 s2 XCHG2`.",
        "gas": "18",
        "fift": "ROTREV\n-ROT",
        "fift_examples": [],
        "opcode": "59",
        "stack": "a b c - c a b"
      },
      "bytecode": { "tlb": "#59", "prefix": "59", "operands": [] },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 317,
          "function_name": "exec_rotrev"
        }
      ]
    },
    {
      "mnemonic": "INC",
      "since_version": 0,
      "doc": {
        "category": "arithm_basic",
        "description": "Equivalent to `1 ADDCONST`.",
        "gas": "18",
        "fift": "INC",
        "fift_examples": [],
        "opcode": "A4",
        "stack": "x - x+1"
      },
      "bytecode": { "tlb": "#A4", "prefix": "A4", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 197,
          "function_name": "exec_inc"
        }
      ]
    },
    {
      "mnemonic": "XCHG2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s1 s[i] XCHG` `s[j] XCHG0`.",
        "gas": "26",
        "fift": "s[i] s[j] XCHG2",
        "fift_examples": [],
        "opcode": "50ij",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#50 i:uint4 j:uint4",
        "prefix": "50",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 163,
          "function_name": "exec_xchg2"
        }
      ]
    },
    {
      "mnemonic": "XCHG_IJ",
      "since_version": 0,
      "doc": {
        "category": "stack_basic",
        "description": "Interchanges `s[i]` with `s[j]`, `1 <= i < j <= 15`.",
        "gas": "26",
        "fift": "s[i] s[j] XCHG",
        "fift_examples": [],
        "opcode": "10ij",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#10 i:(## 4) j:(## 4) {1 <= i} {i + 1 <= j}",
        "prefix": "10",
        "operands_range_check": { "length": 4, "from": 1, "to": 15 },
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 1,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 61,
          "function_name": "exec_xchg"
        }
      ]
    },
    {
      "mnemonic": "BLKDROP2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Drops `i` stack elements under the top `j` elements.\n`1 <= i <= 15`, `0 <= j <= 15`\nEquivalent to `[i+j] 0 REVERSE` `[i] BLKDROP` `[j] 0 REVERSE`.",
        "gas": "26",
        "fift": "[i] [j] BLKDROP2",
        "fift_examples": [],
        "opcode": "6Cij",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#6C i:(## 4) j:uint4 {1 <= i}",
        "prefix": "6C",
        "operands_range_check": { "length": 4, "from": 1, "to": 15 },
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 1,
            "max_value": 15,
            "display_hints": []
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 380,
          "function_name": "exec_blkdrop2"
        }
      ]
    },
    {
      "mnemonic": "PUSHPOW2",
      "since_version": 0,
      "doc": {
        "category": "const_int",
        "description": "(Quietly) pushes `2^(xx+1)` for `0 <= xx <= 255`.\n`2^256` is a `NaN`.",
        "gas": "26",
        "fift": "[xx+1] PUSHPOW2",
        "fift_examples": [],
        "opcode": "83xx",
        "stack": "- 2^(xx+1)"
      },
      "bytecode": {
        "tlb": "#83 xx:uint8",
        "prefix": "83",
        "operands_range_check": { "length": 8, "from": 0, "to": 254 },
        "operands": [
          {
            "name": "x",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 254,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 110,
          "function_name": "exec_push_pow2"
        }
      ]
    },
    {
      "mnemonic": "PUSHINT_8",
      "since_version": 0,
      "doc": {
        "category": "const_int",
        "description": "Pushes integer `xx`. `-128 <= xx <= 127`.",
        "gas": "26",
        "fift": "[xx] PUSHINT\n[xx] INT",
        "fift_examples": [],
        "opcode": "80xx",
        "stack": "- xx"
      },
      "bytecode": {
        "tlb": "#80 xx:int8",
        "prefix": "80",
        "operands": [
          {
            "name": "x",
            "type": "int",
            "size": 8,
            "min_value": -128,
            "max_value": 127,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 46,
          "function_name": "exec_push_tinyint8"
        }
      ]
    },
    {
      "mnemonic": "BLKDROP",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `DROP` performed `i` times.",
        "gas": "26",
        "fift": "[i] BLKDROP",
        "fift_examples": [],
        "opcode": "5F0i",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#5F0 i:uint4",
        "prefix": "5F0",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 371,
          "function_name": "exec_blkdrop"
        }
      ]
    },
    {
      "mnemonic": "ROT",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `1 2 BLKSWAP` or to `s2 s1 XCHG2`.",
        "gas": "18",
        "fift": "ROT",
        "fift_examples": [],
        "opcode": "58",
        "stack": "a b c - b c a"
      },
      "bytecode": { "tlb": "#58", "prefix": "58", "operands": [] },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 308,
          "function_name": "exec_rot"
        }
      ]
    },
    {
      "mnemonic": "PUXC",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] PUSH` `SWAP` `s[j] XCHG0`.",
        "gas": "26",
        "fift": "s[i] s[j-1] PUXC",
        "fift_examples": [],
        "opcode": "52ij",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#52 i:uint4 j:uint4",
        "prefix": "52",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 183,
          "function_name": "exec_puxc"
        }
      ]
    },
    {
      "mnemonic": "AND",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Bitwise and of two signed integers `x` and `y`, sign-extended to infinity.",
        "gas": "18",
        "fift": "AND",
        "fift_examples": [],
        "opcode": "B0",
        "stack": "x y - x&y"
      },
      "bytecode": { "tlb": "#B0", "prefix": "B0", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 769,
          "function_name": "exec_and"
        }
      ]
    },
    {
      "mnemonic": "ADD",
      "since_version": 0,
      "doc": {
        "category": "arithm_basic",
        "description": "",
        "gas": "18",
        "fift": "ADD",
        "fift_examples": [],
        "opcode": "A0",
        "stack": "x y - x+y"
      },
      "bytecode": { "tlb": "#A0", "prefix": "A0", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 162,
          "function_name": "exec_add"
        }
      ]
    },
    {
      "mnemonic": "BLKSWAP",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Permutes two blocks `s[j+i+1] ... s[j+1]` and `s[j] ... s0`.\n`0 <= i,j <= 15`\nEquivalent to `[i+1] [j+1] REVERSE` `[j+1] 0 REVERSE` `[i+j+2] 0 REVERSE`.",
        "gas": "26",
        "fift": "[i+1] [j+1] BLKSWAP",
        "fift_examples": [],
        "opcode": "55ij",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#55 i:uint4 j:uint4",
        "prefix": "55",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 299,
          "function_name": "exec_blkswap"
        }
      ]
    },
    {
      "mnemonic": "SUB",
      "since_version": 0,
      "doc": {
        "category": "arithm_basic",
        "description": "",
        "gas": "18",
        "fift": "SUB",
        "fift_examples": [],
        "opcode": "A1",
        "stack": "x y - x-y"
      },
      "bytecode": { "tlb": "#A1", "prefix": "A1", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 171,
          "function_name": "exec_sub"
        }
      ]
    },
    {
      "mnemonic": "XCHG3",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s2 s[i] XCHG` `s1 s[j] XCHG` `s[k] XCHG0`.",
        "gas": "26",
        "fift": "s[i] s[j] s[k] XCHG3",
        "fift_examples": [],
        "opcode": "4ijk",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#4 i:uint4 j:uint4 k:uint4",
        "prefix": "4",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 204,
          "function_name": "exec_xchg3"
        }
      ]
    },
    {
      "mnemonic": "PUSH2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] PUSH` `s[j+1] PUSH`.",
        "gas": "26",
        "fift": "s[i] s[j] PUSH2",
        "fift_examples": [],
        "opcode": "53ij",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#53 i:uint4 j:uint4",
        "prefix": "53",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 194,
          "function_name": "exec_push2"
        }
      ]
    },
    {
      "mnemonic": "POP_LONG",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Pops the old `s0` value into the old `s[ii]`.\n`0 <= ii <= 255`",
        "gas": "26",
        "fift": "[ii] s() POP",
        "fift_examples": [],
        "opcode": "57ii",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#57 ii:uint8",
        "prefix": "57",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 152,
          "function_name": "exec_pop_l"
        }
      ]
    },
    {
      "mnemonic": "XCPU",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] XCHG0` `s[j] PUSH`.",
        "gas": "26",
        "fift": "s[i] s[j] XCPU",
        "fift_examples": [],
        "opcode": "51ij",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#51 i:uint4 j:uint4",
        "prefix": "51",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 173,
          "function_name": "exec_xcpu"
        }
      ]
    },
    {
      "mnemonic": "TUPLE",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Creates a new _Tuple_ `t=(x_1, ... ,x_n)` containing `n` values `x_1`,..., `x_n`.\n`0 <= n <= 15`",
        "gas": "26+n",
        "fift": "[n] TUPLE",
        "fift_examples": [],
        "opcode": "6F0n",
        "stack": "x_1 ... x_n - t"
      },
      "bytecode": {
        "tlb": "#6F0 n:uint4",
        "prefix": "6F0",
        "operands": [
          {
            "name": "n",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "array",
              "name": "tuple_elements",
              "length_var": "n",
              "array_entry": [
                { "type": "simple", "name": "x" }
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 88,
          "function_name": "exec_mktuple"
        }
      ]
    },
    {
      "mnemonic": "NULLSWAPIFNOT",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Pushes a _Null_ under the topmost _Integer_ `x`, but only if `x=0`. May be used for stack alignment after quiet primitives such as `PLDUXQ`.",
        "gas": "26",
        "fift": "NULLSWAPIFNOT",
        "fift_examples": [],
        "opcode": "6FA1",
        "stack": "x - x or null x"
      },
      "bytecode": { "tlb": "#6FA1", "prefix": "6FA1", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "conditional",
              "name": "x",
              "match": [
                {
                  "value": 0,
                  "stack": [
                    { "type": "const", "value": null, "value_type": "Null" }
                  ]
                }
              ],
              "else": []
            },
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 41,
          "function_name": "exec_null_swap_if"
        }
      ]
    },
    {
      "mnemonic": "NULL",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Pushes the only value of type _Null_.",
        "gas": "18",
        "fift": "NULL\nPUSHNULL",
        "fift_examples": [],
        "opcode": "6D",
        "stack": " - null"
      },
      "bytecode": { "tlb": "#6D", "prefix": "6D", "operands": [] },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            { "type": "const", "value": null, "value_type": "Null" }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 28,
          "function_name": "exec_push_null"
        }
      ]
    },
    {
      "mnemonic": "PUSHPOW2DEC",
      "since_version": 0,
      "doc": {
        "category": "const_int",
        "description": "Pushes `2^(xx+1)-1` for `0 <= xx <= 255`.",
        "gas": "26",
        "fift": "[xx+1] PUSHPOW2DEC",
        "fift_examples": [],
        "opcode": "84xx",
        "stack": "- 2^(xx+1)-1"
      },
      "bytecode": {
        "tlb": "#84 xx:uint8",
        "prefix": "84",
        "operands": [
          {
            "name": "x",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 129,
          "function_name": "exec_push_pow2dec"
        }
      ]
    },
    {
      "mnemonic": "PUXCPU",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] s[j-1] PUXC` `s[k] PUSH`.",
        "gas": "34",
        "fift": "s[i] s[j-1] s[k-1] PUXCPU",
        "fift_examples": [],
        "opcode": "545ijk",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#545 i:uint4 j:uint4 k:uint4",
        "prefix": "545",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          },
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 261,
          "function_name": "exec_puxcpu"
        }
      ]
    },
    {
      "mnemonic": "NEGATE",
      "since_version": 0,
      "doc": {
        "category": "arithm_basic",
        "description": "Equivalent to `-1 MULCONST` or to `ZERO SUBR`.\nNotice that it triggers an integer overflow exception if `x=-2^256`.",
        "gas": "18",
        "fift": "NEGATE",
        "fift_examples": [],
        "opcode": "A3",
        "stack": "x - -x"
      },
      "bytecode": { "tlb": "#A3", "prefix": "A3", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 189,
          "function_name": "exec_negate"
        }
      ]
    },
    {
      "mnemonic": "MUL",
      "since_version": 0,
      "doc": {
        "category": "arithm_basic",
        "description": "",
        "gas": "18",
        "fift": "MUL",
        "fift_examples": [],
        "opcode": "A8",
        "stack": "x y - x*y"
      },
      "bytecode": { "tlb": "#A8", "prefix": "A8", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 231,
          "function_name": "exec_mul"
        }
      ]
    },
    {
      "mnemonic": "XC2PU",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] s[j] XCHG2` `s[k] PUSH`.",
        "gas": "34",
        "fift": "s[i] s[j] s[k] XC2PU",
        "fift_examples": [],
        "opcode": "541ijk",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#541 i:uint4 j:uint4 k:uint4",
        "prefix": "541",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 215,
          "function_name": "exec_xc2pu"
        }
      ]
    },
    {
      "mnemonic": "ISNULL",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Checks whether `x` is a _Null_, and returns `-1` or `0` accordingly.",
        "gas": "18",
        "fift": "ISNULL",
        "fift_examples": [],
        "opcode": "6E",
        "stack": "x - ?"
      },
      "bytecode": { "tlb": "#6E", "prefix": "6E", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 34,
          "function_name": "exec_is_null"
        }
      ]
    },
    {
      "mnemonic": "OR",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Bitwise or of two integers.",
        "gas": "18",
        "fift": "OR",
        "fift_examples": [],
        "opcode": "B1",
        "stack": "x y - x|y"
      },
      "bytecode": { "tlb": "#B1", "prefix": "B1", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 778,
          "function_name": "exec_or"
        }
      ]
    },
    {
      "mnemonic": "DROP2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `DROP` `DROP`.",
        "gas": "18",
        "fift": "DROP2\n2DROP",
        "fift_examples": [],
        "opcode": "5B",
        "stack": "a b - "
      },
      "bytecode": { "tlb": "#5B", "prefix": "5B", "operands": [] },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 335,
          "function_name": "exec_2drop"
        }
      ]
    },
    {
      "mnemonic": "XCPUXC",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s1 s[i] XCHG` `s[j] s[k-1] PUXC`.",
        "gas": "34",
        "fift": "s[i] s[j] s[k-1] XCPUXC",
        "fift_examples": [],
        "opcode": "542ijk",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#542 i:uint4 j:uint4 k:uint4",
        "prefix": "542",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 226,
          "function_name": "exec_xcpuxc"
        }
      ]
    },
    {
      "mnemonic": "DIV",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "`q=floor(x/y)`, `r=x-y*q`",
        "gas": "26",
        "fift": "DIV",
        "fift_examples": [],
        "opcode": "A904",
        "stack": "x y - q"
      },
      "bytecode": { "tlb": "#A904", "prefix": "A904", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 266,
          "function_name": "exec_divmod"
        }
      ]
    },
    {
      "mnemonic": "PUSH_LONG",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Pushes a copy of the old `s[ii]` into the stack.\n`0 <= ii <= 255`",
        "gas": "26",
        "fift": "[ii] s() PUSH",
        "fift_examples": [],
        "opcode": "56ii",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#56 ii:uint8",
        "prefix": "56",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 118,
          "function_name": "exec_push_l"
        }
      ]
    },
    {
      "mnemonic": "PUSH3",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] PUSH` `s[j+1] s[k+1] PUSH2`.",
        "gas": "34",
        "fift": "s[i] s[j] s[k] PUSH3",
        "fift_examples": [],
        "opcode": "547ijk",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#547 i:uint4 j:uint4 k:uint4",
        "prefix": "547",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 286,
          "function_name": "exec_push3"
        }
      ]
    },
    {
      "mnemonic": "NOT",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Bitwise not of an integer.",
        "gas": "26",
        "fift": "NOT",
        "fift_examples": [],
        "opcode": "B3",
        "stack": "x - ~x"
      },
      "bytecode": { "tlb": "#B3", "prefix": "B3", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 796,
          "function_name": "exec_not"
        }
      ]
    },
    {
      "mnemonic": "LSHIFT",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "`0 <= cc <= 255`",
        "gas": "26",
        "fift": "[cc+1] LSHIFT#",
        "fift_examples": [],
        "opcode": "AAcc",
        "stack": "x - x*2^(cc+1)"
      },
      "bytecode": {
        "tlb": "#AA cc:uint8",
        "prefix": "AA",
        "operands": [
          {
            "name": "c",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "SWAP2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `2 2 BLKSWAP` or to `s3 s2 XCHG2`.",
        "gas": "18",
        "fift": "SWAP2\n2SWAP",
        "fift_examples": [],
        "opcode": "5A",
        "stack": "a b c d - c d a b"
      },
      "bytecode": { "tlb": "#5A", "prefix": "5A", "operands": [] },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 326,
          "function_name": "exec_2swap"
        }
      ]
    },
    {
      "mnemonic": "UNTUPLE",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Unpacks a _Tuple_ `t=(x_1,...,x_n)` of length equal to `0 <= n <= 15`.\nIf `t` is not a _Tuple_, or if `|t| != n`, a type check exception is thrown.",
        "gas": "26+n",
        "fift": "[n] UNTUPLE",
        "fift_examples": [],
        "opcode": "6F2n",
        "stack": "t - x_1 ... x_n"
      },
      "bytecode": {
        "tlb": "#6F2 n:uint4",
        "prefix": "6F2",
        "operands": [
          {
            "name": "n",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "array",
              "name": "tuple_elements",
              "length_var": "n",
              "array_entry": [
                { "type": "simple", "name": "x" }
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 158,
          "function_name": "exec_untuple"
        }
      ]
    },
    {
      "mnemonic": "MULRSHIFT",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "34",
        "fift": "[tt+1] MULRSHIFT#",
        "fift_examples": [],
        "opcode": "A9B4tt",
        "stack": "x y - floor(x*y/2^(tt+1))"
      },
      "bytecode": {
        "tlb": "#A9B4 tt:uint8",
        "prefix": "A9B4",
        "operands": [
          {
            "name": "t",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "INDEX",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Returns the `k`-th element of a _Tuple_ `t`.\n`0 <= k <= 15`.",
        "gas": "26",
        "fift": "[k] INDEX",
        "fift_examples": [],
        "opcode": "6F1k",
        "stack": "t - x"
      },
      "bytecode": {
        "tlb": "#6F1 k:uint4",
        "prefix": "6F1",
        "operands": [
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            { "type": "simple", "name": "x" }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 106,
          "function_name": "exec_tuple_index"
        }
      ]
    },
    {
      "mnemonic": "MULDIV",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "`q=floor(x*y/z)`",
        "gas": "26",
        "fift": "MULDIV",
        "fift_examples": [],
        "opcode": "A984",
        "stack": "x y z - q"
      },
      "bytecode": { "tlb": "#A984", "prefix": "A984", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "z",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 434,
          "function_name": "exec_muldivmod"
        }
      ]
    },
    {
      "mnemonic": "RSHIFT",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "`0 <= cc <= 255`",
        "gas": "18",
        "fift": "[cc+1] RSHIFT#",
        "fift_examples": [],
        "opcode": "ABcc",
        "stack": "x - floor(x/2^(cc+1))"
      },
      "bytecode": {
        "tlb": "#AB cc:uint8",
        "prefix": "AB",
        "operands": [
          {
            "name": "c",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 749,
          "function_name": "exec_rshift"
        }
      ]
    },
    {
      "mnemonic": "ADDCONST",
      "since_version": 0,
      "doc": {
        "category": "arithm_basic",
        "description": "`-128 <= cc <= 127`.",
        "gas": "26",
        "fift": "[cc] ADDCONST\n[cc] ADDINT\n[-cc] SUBCONST\n[-cc] SUBINT",
        "fift_examples": [],
        "opcode": "A6cc",
        "stack": "x - x+cc"
      },
      "bytecode": {
        "tlb": "#A6 cc:int8",
        "prefix": "A6",
        "operands": [
          {
            "name": "c",
            "type": "int",
            "size": 8,
            "min_value": -128,
            "max_value": 127,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 213,
          "function_name": "exec_add_tinyint8"
        }
      ]
    },
    {
      "mnemonic": "MIN",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Computes the minimum of two integers `x` and `y`.",
        "gas": "26",
        "fift": "MIN",
        "fift_examples": [],
        "opcode": "B608",
        "stack": "x y - x or y"
      },
      "bytecode": { "tlb": "#B608", "prefix": "B608", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 197,
          "function_name": "exec_inc"
        }
      ]
    },
    {
      "mnemonic": "TUCK",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `SWAP` `OVER` or to `s1 s1 XCPU`.",
        "gas": "18",
        "fift": "TUCK",
        "fift_examples": [],
        "opcode": "66",
        "stack": "a b - b a b"
      },
      "bytecode": { "tlb": "#66", "prefix": "66", "operands": [] },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 474,
          "function_name": "exec_tuck"
        }
      ]
    },
    {
      "mnemonic": "DUP2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s1 s0 PUSH2`.",
        "gas": "18",
        "fift": "DUP2\n2DUP",
        "fift_examples": [],
        "opcode": "5C",
        "stack": "a b - a b a b"
      },
      "bytecode": { "tlb": "#5C", "prefix": "5C", "operands": [] },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 344,
          "function_name": "exec_2dup"
        }
      ]
    },
    {
      "mnemonic": "PU2XC",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] PUSH` `SWAP` `s[j] s[k-1] PUXC`.",
        "gas": "34",
        "fift": "s[i] s[j-1] s[k-2] PU2XC",
        "fift_examples": [],
        "opcode": "546ijk",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#546 i:uint4 j:uint4 k:uint4",
        "prefix": "546",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          },
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 2 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 249,
          "function_name": "exec_puxc2"
        }
      ]
    },
    {
      "mnemonic": "XCPU2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] XCHG0` `s[j] s[k] PUSH2`.",
        "gas": "34",
        "fift": "s[i] s[j] s[k] XCPU2",
        "fift_examples": [],
        "opcode": "543ijk",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#543 i:uint4 j:uint4 k:uint4",
        "prefix": "543",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 215,
          "function_name": "exec_xc2pu"
        }
      ]
    },
    {
      "mnemonic": "NULLSWAPIFNOT2",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Pushes two nulls under the topmost _Integer_ `x`, but only if `x=0`.\nEquivalent to `NULLSWAPIFNOT` `NULLSWAPIFNOT`.",
        "gas": "26",
        "fift": "NULLSWAPIFNOT2",
        "fift_examples": [],
        "opcode": "6FA5",
        "stack": "x - x or null null x"
      },
      "bytecode": { "tlb": "#6FA5", "prefix": "6FA5", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "conditional",
              "name": "x",
              "match": [
                {
                  "value": 0,
                  "stack": [
                    { "type": "const", "value": null, "value_type": "Null" },
                    { "type": "const", "value": null, "value_type": "Null" }
                  ]
                }
              ],
              "else": []
            },
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 56,
          "function_name": "exec_null_swap_if_many"
        }
      ]
    },
    {
      "mnemonic": "MULDIVR",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "`q'=round(x*y/z)`",
        "gas": "26",
        "fift": "MULDIVR",
        "fift_examples": [],
        "opcode": "A985",
        "stack": "x y z - q'"
      },
      "bytecode": { "tlb": "#A985", "prefix": "A985", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "z",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 434,
          "function_name": "exec_muldivmod"
        }
      ]
    },
    {
      "mnemonic": "PUXC2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s[i] PUSH` `s2 XCHG0` `s[j] s[k] XCHG2`.",
        "gas": "34",
        "fift": "s[i] s[j-1] s[k-1] PUXC2",
        "fift_examples": [],
        "opcode": "544ijk",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#544 i:uint4 j:uint4 k:uint4",
        "prefix": "544",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" }
            ]
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          },
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": [
              { "type": "stack" },
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 249,
          "function_name": "exec_puxc2"
        }
      ]
    },
    {
      "mnemonic": "MULCONST",
      "since_version": 0,
      "doc": {
        "category": "arithm_basic",
        "description": "`-128 <= cc <= 127`.",
        "gas": "26",
        "fift": "[cc] MULCONST\n[cc] MULINT",
        "fift_examples": [],
        "opcode": "A7cc",
        "stack": "x - x*cc"
      },
      "bytecode": {
        "tlb": "#A7 cc:int8",
        "prefix": "A7",
        "operands": [
          {
            "name": "c",
            "type": "int",
            "size": 8,
            "min_value": -128,
            "max_value": 127,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 222,
          "function_name": "exec_mul_tinyint8"
        }
      ]
    },
    {
      "mnemonic": "DEC",
      "since_version": 0,
      "doc": {
        "category": "arithm_basic",
        "description": "Equivalent to `-1 ADDCONST`.",
        "gas": "18",
        "fift": "DEC",
        "fift_examples": [],
        "opcode": "A5",
        "stack": "x - x-1"
      },
      "bytecode": { "tlb": "#A5", "prefix": "A5", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 205,
          "function_name": "exec_dec"
        }
      ]
    },
    {
      "mnemonic": "TPUSH",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Appends a value `x` to a _Tuple_ `t=(x_1,...,x_n)`, but only if the resulting _Tuple_ `t'=(x_1,...,x_n,x)` is of length at most 255. Otherwise throws a type check exception.",
        "gas": "26+|t'|",
        "fift": "TPUSH\nCOMMA",
        "fift_examples": [],
        "opcode": "6F8C",
        "stack": "t x - t'"
      },
      "bytecode": { "tlb": "#6F8C", "prefix": "6F8C", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            },
            { "type": "simple", "name": "x" }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t2",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 296,
          "function_name": "exec_tuple_push"
        }
      ]
    },
    {
      "mnemonic": "REVERSE",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Reverses the order of `s[j+i+1] ... s[j]`.",
        "gas": "26",
        "fift": "[i+2] [j] REVERSE",
        "fift_examples": [],
        "opcode": "5Eij",
        "stack": ""
      },
      "bytecode": {
        "tlb": "#5E i:uint4 j:uint4",
        "prefix": "5E",
        "operands": [
          {
            "name": "i",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          },
          {
            "name": "j",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 362,
          "function_name": "exec_reverse"
        }
      ]
    },
    {
      "mnemonic": "TLEN",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Returns the length of a _Tuple_.",
        "gas": "26",
        "fift": "TLEN",
        "fift_examples": [],
        "opcode": "6F88",
        "stack": "t - n"
      },
      "bytecode": { "tlb": "#6F88", "prefix": "6F88", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "n",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 265,
          "function_name": "exec_tuple_length"
        }
      ]
    },
    {
      "mnemonic": "MOD",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "26",
        "fift": "MOD",
        "fift_examples": [],
        "opcode": "A908",
        "stack": "x y - r"
      },
      "bytecode": { "tlb": "#A908", "prefix": "A908", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 266,
          "function_name": "exec_divmod"
        }
      ]
    },
    {
      "mnemonic": "MODPOW2",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "34",
        "fift": "[tt+1] MODPOW2#",
        "fift_examples": [],
        "opcode": "A938tt",
        "stack": "x - x mod 2^(tt+1)"
      },
      "bytecode": {
        "tlb": "#A938 tt:uint8",
        "prefix": "A938",
        "operands": [
          {
            "name": "t",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 758,
          "function_name": "exec_pow2"
        }
      ]
    },
    {
      "mnemonic": "MAX",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Computes the maximum of two integers `x` and `y`.",
        "gas": "26",
        "fift": "MAX",
        "fift_examples": [],
        "opcode": "B609",
        "stack": "x y - x or y"
      },
      "bytecode": { "tlb": "#B609", "prefix": "B609", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 914,
          "function_name": "exec_minmax"
        }
      ]
    },
    {
      "mnemonic": "OVER2",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Equivalent to `s3 s2 PUSH2`.",
        "gas": "18",
        "fift": "OVER2\n2OVER",
        "fift_examples": [],
        "opcode": "5D",
        "stack": "a b c d - a b c d a b"
      },
      "bytecode": { "tlb": "#5D", "prefix": "5D", "operands": [] },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 353,
          "function_name": "exec_2over"
        }
      ]
    },
    {
      "mnemonic": "POW2",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "`0 <= y <= 1023`\nEquivalent to `ONE` `SWAP` `LSHIFT`.",
        "gas": "18",
        "fift": "POW2",
        "fift_examples": [],
        "opcode": "AE",
        "stack": "y - 2^y"
      },
      "bytecode": { "tlb": "#AE", "prefix": "AE", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 758,
          "function_name": "exec_pow2"
        }
      ]
    },
    {
      "mnemonic": "INDEXVAR",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Similar to `k INDEX`, but with `0 <= k <= 254` taken from the stack.",
        "gas": "26",
        "fift": "INDEXVAR",
        "fift_examples": [],
        "opcode": "6F81",
        "stack": "t k - x"
      },
      "bytecode": { "tlb": "#6F81", "prefix": "6F81", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            },
            {
              "type": "simple",
              "name": "k",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            { "type": "simple", "name": "x" }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 112,
          "function_name": "exec_tuple_index_var"
        }
      ]
    },
    {
      "mnemonic": "DIVC",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "`q''=ceil(x/y)`, `r''=x-y*q''`",
        "gas": "26",
        "fift": "DIVC",
        "fift_examples": [],
        "opcode": "A906",
        "stack": "x y - q''"
      },
      "bytecode": { "tlb": "#A906", "prefix": "A906", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 266,
          "function_name": "exec_divmod"
        }
      ]
    },
    {
      "mnemonic": "ABS",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Computes the absolute value of an integer `x`.",
        "gas": "26",
        "fift": "ABS",
        "fift_examples": [],
        "opcode": "B60B",
        "stack": "x - |x|"
      },
      "bytecode": { "tlb": "#B60B", "prefix": "B60B", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 936,
          "function_name": "exec_abs"
        }
      ]
    },
    {
      "mnemonic": "MULDIVC",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "`q'=ceil(x*y/z)`",
        "gas": "26",
        "fift": "MULDIVC",
        "fift_examples": [],
        "opcode": "A986",
        "stack": "x y z - q'"
      },
      "bytecode": { "tlb": "#A986", "prefix": "A986", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "z",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 434,
          "function_name": "exec_muldivmod"
        }
      ]
    },
    {
      "mnemonic": "DIVMOD",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "26",
        "fift": "DIVMOD",
        "fift_examples": [],
        "opcode": "A90C",
        "stack": "x y - q r"
      },
      "bytecode": { "tlb": "#A90C", "prefix": "A90C", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "q",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "r",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 266,
          "function_name": "exec_divmod"
        }
      ]
    },
    {
      "mnemonic": "XOR",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Bitwise xor of two integers.",
        "gas": "18",
        "fift": "XOR",
        "fift_examples": [],
        "opcode": "B2",
        "stack": "x y - x xor y"
      },
      "bytecode": { "tlb": "#B2", "prefix": "B2", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 787,
          "function_name": "exec_xor"
        }
      ]
    },
    {
      "mnemonic": "MULDIVMOD",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "`q=floor(x*y/z)`, `r=x*y-z*q`",
        "gas": "26",
        "fift": "MULDIVMOD",
        "fift_examples": [],
        "opcode": "A98C",
        "stack": "x y z - q r"
      },
      "bytecode": { "tlb": "#A98C", "prefix": "A98C", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "z",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "q",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "r",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 434,
          "function_name": "exec_muldivmod"
        }
      ]
    },
    {
      "mnemonic": "TPOP",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Detaches the last element `x=x_n` from a non-empty _Tuple_ `t=(x_1,...,x_n)`, and returns both the resulting _Tuple_ `t'=(x_1,...,x_{n-1})` and the original last element `x`.",
        "gas": "26+|t'|",
        "fift": "TPOP",
        "fift_examples": [],
        "opcode": "6F8D",
        "stack": "t - t' x"
      },
      "bytecode": { "tlb": "#6F8D", "prefix": "6F8D", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t2",
              "value_types": [
                "Tuple"
              ]
            },
            { "type": "simple", "name": "x" }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 308,
          "function_name": "exec_tuple_pop"
        }
      ]
    },
    {
      "mnemonic": "UBITSIZE",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Computes smallest `c >= 0` such that `x` fits into a `c`-bit unsigned integer (`0 <= x < 2^c`), or throws a range check exception.",
        "gas": "26",
        "fift": "UBITSIZE",
        "fift_examples": [],
        "opcode": "B603",
        "stack": "x - c"
      },
      "bytecode": { "tlb": "#B603", "prefix": "B603", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "c",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 856,
          "function_name": "exec_bitsize"
        }
      ]
    },
    {
      "mnemonic": "SETINDEXVAR",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Similar to `k SETINDEX`, but with `0 <= k <= 254` taken from the stack.",
        "gas": "26+|t'|",
        "fift": "SETINDEXVAR",
        "fift_examples": [],
        "opcode": "6F85",
        "stack": "t x k - t'"
      },
      "bytecode": { "tlb": "#6F85", "prefix": "6F85", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            },
            { "type": "simple", "name": "x" },
            {
              "type": "simple",
              "name": "k",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t2",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 229,
          "function_name": "exec_tuple_set_index_var"
        }
      ]
    },
    {
      "mnemonic": "NOP",
      "since_version": 0,
      "doc": {
        "category": "stack_basic",
        "description": "Does nothing.",
        "gas": "18",
        "fift": "NOP",
        "fift_examples": [],
        "opcode": "00",
        "stack": "-"
      },
      "bytecode": { "tlb": "#00", "prefix": "00", "operands": [] },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": { "stack": [], "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 28,
          "function_name": "exec_nop"
        }
      ]
    },
    {
      "mnemonic": "EXPLODEVAR",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Similar to `n EXPLODE`, but with `0 <= n <= 255` taken from the stack.",
        "gas": "26+m",
        "fift": "EXPLODEVAR",
        "fift_examples": [],
        "opcode": "6F84",
        "stack": "t n - x_1 ... x_m m"
      },
      "bytecode": { "tlb": "#6F84", "prefix": "6F84", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            },
            {
              "type": "simple",
              "name": "n",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "array",
              "name": "tuple_elements",
              "length_var": "m",
              "array_entry": [
                { "type": "simple", "name": "x" }
              ]
            },
            {
              "type": "simple",
              "name": "m",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 202,
          "function_name": "exec_explode_tuple_var"
        }
      ]
    },
    {
      "mnemonic": "UFITSX",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Checks whether `x` is a `c`-bit unsigned integer for `0 <= c <= 1023`.",
        "gas": "26/76",
        "fift": "UFITSX",
        "fift_examples": [],
        "opcode": "B601",
        "stack": "x c - x"
      },
      "bytecode": { "tlb": "#B601", "prefix": "B601", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "c",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 843,
          "function_name": "exec_ufits"
        }
      ]
    },
    {
      "mnemonic": "LSHIFT_VAR",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "`0 <= y <= 1023`",
        "gas": "18",
        "fift": "LSHIFT",
        "fift_examples": [],
        "opcode": "AC",
        "stack": "x y - x*2^y"
      },
      "bytecode": { "tlb": "#AC", "prefix": "AC", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "RSHIFTR",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "34",
        "fift": "[tt+1] RSHIFTR#",
        "fift_examples": [],
        "opcode": "A935tt",
        "stack": "x - round(x/2^(tt+1))"
      },
      "bytecode": {
        "tlb": "#A935 tt:uint8",
        "prefix": "A935",
        "operands": [
          {
            "name": "t",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "RSHIFT_VAR",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "`0 <= y <= 1023`",
        "gas": "18",
        "fift": "RSHIFT",
        "fift_examples": [],
        "opcode": "AD",
        "stack": "x y - floor(x/2^y)"
      },
      "bytecode": { "tlb": "#AD", "prefix": "AD", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 749,
          "function_name": "exec_rshift"
        }
      ]
    },
    {
      "mnemonic": "PUSHNAN",
      "since_version": 0,
      "doc": {
        "category": "const_int",
        "description": "Pushes a `NaN`.",
        "gas": "26",
        "fift": "PUSHNAN",
        "fift_examples": [],
        "opcode": "83FF",
        "stack": "- NaN"
      },
      "bytecode": { "tlb": "#83FF", "prefix": "83FF", "operands": [] },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            { "type": "const", "value_type": "Integer", "value": null }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 120,
          "function_name": "exec_push_nan"
        }
      ]
    },
    {
      "mnemonic": "SETINDEX",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Computes _Tuple_ `t'` that differs from `t` only at position `t'_{k+1}`, which is set to `x`.\n`0 <= k <= 15`\nIf `k >= |t|`, throws a range check exception.",
        "gas": "26+|t|",
        "fift": "[k] SETINDEX",
        "fift_examples": [],
        "opcode": "6F5k",
        "stack": "t x - t'"
      },
      "bytecode": {
        "tlb": "#6F5 k:uint4",
        "prefix": "6F5",
        "operands": [
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            },
            { "type": "simple", "name": "x" }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t2",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 222,
          "function_name": "exec_tuple_set_index"
        }
      ]
    },
    {
      "mnemonic": "QTLEN",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Similar to `TLEN`, but returns `-1` if `t` is not a _Tuple_.",
        "gas": "26",
        "fift": "QTLEN",
        "fift_examples": [],
        "opcode": "6F89",
        "stack": "t - n or -1"
      },
      "bytecode": { "tlb": "#6F89", "prefix": "6F89", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "n",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 273,
          "function_name": "exec_tuple_length_quiet"
        }
      ]
    },
    {
      "mnemonic": "MULRSHIFTR",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "34",
        "fift": "[tt+1] MULRSHIFTR#",
        "fift_examples": [],
        "opcode": "A9B5tt",
        "stack": "x y - round(x*y/2^(tt+1))"
      },
      "bytecode": {
        "tlb": "#A9B5 tt:uint8",
        "prefix": "A9B5",
        "operands": [
          {
            "name": "t",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "RSHIFTC",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "34",
        "fift": "[tt+1] RSHIFTC#",
        "fift_examples": [],
        "opcode": "A936tt",
        "stack": "x - ceil(x/2^(tt+1))"
      },
      "bytecode": {
        "tlb": "#A936 tt:uint8",
        "prefix": "A936",
        "operands": [
          {
            "name": "t",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "QMUL",
      "since_version": 0,
      "doc": {
        "category": "arithm_quiet",
        "description": "",
        "gas": "26",
        "fift": "QMUL",
        "fift_examples": [],
        "opcode": "B7A8",
        "stack": "x y - x*y"
      },
      "bytecode": { "tlb": "#B7A8", "prefix": "B7A8", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 231,
          "function_name": "exec_mul"
        }
      ]
    },
    {
      "mnemonic": "QMULDIVMOD",
      "since_version": 0,
      "doc": {
        "category": "arithm_quiet",
        "description": "",
        "gas": "34",
        "fift": "QMULDIVMOD",
        "fift_examples": [],
        "opcode": "B7A98C",
        "stack": "x y z - q r"
      },
      "bytecode": { "tlb": "#B7A98C", "prefix": "B7A98C", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "q",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "r",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 434,
          "function_name": "exec_muldivmod"
        }
      ]
    },
    {
      "mnemonic": "LSHIFTDIVC",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "26",
        "fift": "[tt+1] LSHIFT#DIVC",
        "fift_examples": [],
        "opcode": "A9D6tt",
        "stack": "x y - ceil(2^(tt+1)*x/y)"
      },
      "bytecode": {
        "tlb": "#A9D6 tt:uint8",
        "prefix": "A9D6",
        "operands": [
          {
            "name": "t",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "LSHIFTDIVR",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "34",
        "fift": "[tt+1] LSHIFT#DIVR",
        "fift_examples": [],
        "opcode": "A9D5tt",
        "stack": "x y - round(2^(tt+1)*x/y)"
      },
      "bytecode": {
        "tlb": "#A9D5 tt:uint8",
        "prefix": "A9D5",
        "operands": [
          {
            "name": "t",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "MULRSHIFTRMOD",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "34",
        "fift": "MULRSHIFTR#MOD",
        "fift_examples": [],
        "opcode": "A9BD",
        "stack": "x y - q=round(x*y/2^(tt+1)) r=xy-q*2^(tt+1)"
      },
      "bytecode": {
        "tlb": "#A9BD",
        "prefix": "A9BD",
        "operands": [
          {
            "name": "t",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 497,
          "function_name": "exec_mulshrmod"
        }
      ]
    },
    {
      "mnemonic": "LSHIFTDIVMODR_VAR",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "26",
        "fift": "LSHIFTDIVMODR",
        "fift_examples": [],
        "opcode": "A9CD",
        "stack": "x y z - q=round(2^z*x/y) r=2^z*x-q*y"
      },
      "bytecode": { "tlb": "#A9CD", "prefix": "A9CD", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "z",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 595,
          "function_name": "exec_shldivmod"
        }
      ]
    },
    {
      "mnemonic": "RSHIFTR_VAR",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "",
        "gas": "26",
        "fift": "RSHIFTR",
        "fift_examples": [],
        "opcode": "A925",
        "stack": "x y - round(x/2^y)"
      },
      "bytecode": { "tlb": "#A925", "prefix": "A925", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 740,
          "function_name": "exec_lshift"
        }
      ]
    },
    {
      "mnemonic": "UFITS",
      "since_version": 0,
      "doc": {
        "category": "arithm_logical",
        "description": "Checks whether `x` is a `cc+1`-bit unsigned integer for `0 <= cc <= 255` (i.e., whether `0 <= x < 2^(cc+1)`).",
        "gas": "26/76",
        "fift": "[cc+1] UFITS",
        "fift_examples": [],
        "opcode": "B5cc",
        "stack": "x - x"
      },
      "bytecode": {
        "tlb": "#B5 cc:uint8",
        "prefix": "B5",
        "operands": [
          {
            "name": "c",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 843,
          "function_name": "exec_ufits"
        }
      ]
    },
    {
      "mnemonic": "DIVR",
      "since_version": 0,
      "doc": {
        "category": "arithm_div",
        "description": "`q'=round(x/y)`, `r'=x-y*q'`",
        "gas": "26",
        "fift": "DIVR",
        "fift_examples": [],
        "opcode": "A905",
        "stack": "x y - q'"
      },
      "bytecode": { "tlb": "#A905", "prefix": "A905", "operands": [] },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "x",
              "value_types": [
                "Integer"
              ]
            },
            {
              "type": "simple",
              "name": "y",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 266,
          "function_name": "exec_divmod"
        }
      ]
    },
    {
      "mnemonic": "PUSHNEGPOW2",
      "since_version": 0,
      "doc": {
        "category": "const_int",
        "description": "Pushes `-2^(xx+1)` for `0 <= xx <= 255`.",
        "gas": "26",
        "fift": "[xx+1] PUSHNEGPOW2",
        "fift_examples": [],
        "opcode": "85xx",
        "stack": "- -2^(xx+1)"
      },
      "bytecode": {
        "tlb": "#85 xx:uint8",
        "prefix": "85",
        "operands": [
          {
            "name": "x",
            "type": "uint",
            "size": 8,
            "min_value": 0,
            "max_value": 255,
            "display_hints": [
              { "type": "add", "value": 1 }
            ]
          }
        ]
      },
      "value_flow": {
        "inputs": { "stack": [], "registers": [] },
        "outputs": {
          "stack": [
            {
              "type": "simple",
              "name": "result",
              "value_types": [
                "Integer"
              ]
            }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "arithops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/arithops.cpp",
          "line": 139,
          "function_name": "exec_push_negpow2"
        }
      ]
    },
    {
      "mnemonic": "BLKSWX",
      "since_version": 0,
      "doc": {
        "category": "stack_complex",
        "description": "Pops integers `i`,`j` from the stack, then performs `[i] [j] BLKSWAP`.",
        "gas": "18",
        "fift": "BLKSWX",
        "fift_examples": [],
        "opcode": "63",
        "stack": ""
      },
      "bytecode": { "tlb": "#63", "prefix": "63", "operands": [] },
      "value_flow": {
        "inputs": { "registers": [] },
        "outputs": { "registers": [] }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "stackops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/stackops.cpp",
          "line": 436,
          "function_name": "exec_blkswap_x"
        }
      ]
    },
    {
      "mnemonic": "INDEXQ",
      "since_version": 0,
      "doc": {
        "category": "tuple",
        "description": "Returns the `k`-th element of a _Tuple_ `t`, where `0 <= k <= 15`. In other words, returns `x_{k+1}` if `t=(x_1,...,x_n)`. If `k>=n`, or if `t` is _Null_, returns a _Null_ instead of `x`.",
        "gas": "26",
        "fift": "[k] INDEXQ",
        "fift_examples": [],
        "opcode": "6F6k",
        "stack": "t - x"
      },
      "bytecode": {
        "tlb": "#6F6 k:uint4",
        "prefix": "6F6",
        "operands": [
          {
            "name": "k",
            "type": "uint",
            "size": 4,
            "min_value": 0,
            "max_value": 15,
            "display_hints": []
          }
        ]
      },
      "value_flow": {
        "inputs": {
          "stack": [
            {
              "type": "simple",
              "name": "t",
              "value_types": [
                "Tuple",
                "Null"
              ]
            }
          ],
          "registers": []
        },
        "outputs": {
          "stack": [
            { "type": "simple", "name": "x" }
          ],
          "registers": []
        }
      },
      "control_flow": { "branches": [], "nobranch": true },
      "implementation": [
        {
          "file": "tupleops.cpp",
          "path": "https://raw.githubusercontent.com/ton-blockchain/ton/cee4c674ea999fecc072968677a34a7545ac9c4d/crypto/vm/tupleops.cpp",
          "line": 124,
          "function_name": "exec_tuple_quiet_index"
        }
      ]
    }
  ],
  "aliases": []
}
