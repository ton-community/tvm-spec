#
# Update update-tvm-spec.md before touching this workflow,
# perhaps update only doc and use ChatGPT to regenerate this workflow
#

name: Update TVM spec

on:
  workflow_call:
    inputs:
      branch:
        type: string
        required: true
    outputs:
      pr-url:
        description: URL of the created pull request (empty if none)
        value: ${{ jobs.update-tvm-spec.outputs.pr-url }}

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  update-tvm-spec:
    runs-on: ubuntu-latest
    outputs:
      pr-url: ${{ steps.cpr.outputs.pull-request-url }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0  # needed for pushing later

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update ton commit
        run: cd scripts && make update-ton-commit

      - name: Update all
        run: cd scripts && make update-all

      - name: Check for changes
        id: git-diff
        run: |
          git add .
          CHANGED_FILES=$(git diff --cached --name-only | tr '\n' ' ')
          echo "changed=$CHANGED_FILES" >> $GITHUB_OUTPUT

      - name: Close previous update PRs
        if: ${{ steps.git-diff.outputs.changed != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const openPrs = await github.paginate(github.rest.pulls.list, {
              owner,
              repo,
              state: 'open',
              per_page: 100,
            });
            for (const pr of openPrs) {
              if (pr.title === 'Update TVM spec' && (pr.head.ref || '').startsWith('update-tvm-spec/')) {
                core.info(`Closing previous PR #${pr.number} on branch ${pr.head.ref}`);
                await github.rest.pulls.update({ owner, repo, pull_number: pr.number, state: 'closed' });
              }
            }

      - name: Create Pull Request if needed
        if: ${{ steps.git-diff.outputs.changed != '' }}
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Update TVM spec"
          title: "Update TVM spec"
          body: |
            Automated update of TVM spec.
            Includes regenerated files from `make update-all`.
          branch: "update-tvm-spec"
          base: ${{ inputs.branch }}
          add-paths: |
            match-report.json
            cp0.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run validate.yml on updated branch
        if: ${{ steps.git-diff.outputs.changed != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: 'validate.yml',
              ref: 'update-tvm-spec'
            });

      - name: Publish PR URL summary
        run: |
          if [ -n "${{ steps.cpr.outputs.pull-request-url }}" ]; then
            echo "PR created: ${{ steps.cpr.outputs.pull-request-url }}" >> "$GITHUB_STEP_SUMMARY"
            echo "pr_url=${{ steps.cpr.outputs.pull-request-url }}" >> "$GITHUB_OUTPUT"
          else
            echo "No PR created (no changes)" >> "$GITHUB_STEP_SUMMARY"
            echo "pr_url=" >> "$GITHUB_OUTPUT"
          fi
